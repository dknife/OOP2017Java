import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;


public class GuiTicTacToe extends JFrame {
	int board[][] = {{0,0,0}, {0,0,0}, {0,0,0}};
	int move[] = {-1,-1};
	int gameState = 0;
	
	JButton btn[][];	
	MyActionListener listen[][];
	
	class MyActionListener implements ActionListener {
		public int row;
		public int col;
		MyActionListener(int r, int c) { row = r; col = c; }
		
		public void actionPerformed(ActionEvent e) {
			if(!TicTacToeEngine.inputOK(row, col, board)) 
				return;
			board[row][col] = -1;
			move = TicTacToeEngine.bestMove(board);			
			JButton b = (JButton) e.getSource();
			b.setBackground(Color.RED);
			btn[move[0]][move[1]].setBackground(Color.BLUE);
			board[move[0]][move[1]] = 1;
			int winner = TicTacToeEngine.whoWon(board);
			switch(winner) {
			case 0: break;
			case 1: b.setText("You Lost"); break;
			case -1: b.setText("You win!"); break;
			case 10: b.setText("DRAW"); break;
			}
		}
	}
	GuiTicTacToe() {
		setTitle("Tic Tac Toe");
		setSize(500,500);
		setLayout(new GridLayout(3,3,0,0));
		
		btn = new JButton[3][3];
		listen = new MyActionListener[3][3];
		
		for(int i=0;i<3;i++) {
			for(int j=0;j<3;j++) {
				btn[i][j] = new JButton(i+","+j);
				add(btn[i][j]);
				listen[i][j] = new MyActionListener(i,j);
				btn[i][j].addActionListener(listen[i][j]);
			}
		}
		
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		
	}
	public static void main(String[] s) {
		GuiTicTacToe Frame = new GuiTicTacToe();
	}
}
